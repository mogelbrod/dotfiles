#!/usr/bin/env ruby
# original script from
# <http://errtheblog.com/posts/89-huba-huba>
# with edits by mogelbrod <http://github.com/mogelbrod>

require 'fileutils'

IS_WINDOWS = (RUBY_PLATFORM =~ /mingw|mswin|cygwin/i)

# Creates a symlink to a file or directory.
def link(origin, target)
  if IS_WINDOWS
    flag = File.directory?(origin) ? ' /J' : ''
    origin = File.expand_path(origin).gsub!('/', '\\')
    target = File.expand_path(target).gsub('/', '\\')
    `cmd.exe /c \"mklink#{flag} #{target} #{origin}\""`
  else
    `ln -s #{File.expand_path origin} #{target}`
  end
end

home = File.expand_path('~')
dir = File.dirname(__FILE__)
`cd #{dir}` unless dir == '.'

puts "Create symlinks ..."

Dir['*'].each do |origin|
  next if origin =~ /\Ainstall/
  file = ".#{origin}"

  # Special cases
  if origin == 'vim' && IS_WINDOWS
    file = 'vimfiles' 
  elsif %w(terminator).include? origin
    config_dir = File.join home, '.config'
    FileUtils.mkdir_p(config_dir) unless File.exists?(config_dir)
    file = File.join('.config', origin)
  end

  target = File.join(home, file)

  if File.exists?(target)
    puts " - #{file} (#{target}) already exists, skipping."
  else
    if link(origin, target)
      puts " + #{file} => #{target} has been linked."
    else
      puts " ! #{target} could not be linked."
    end
  end
end

# unless IS_WINDOWS
  # puts "Create vim swap directory ..."
  # FileUtils.mkdir_p "~/.vim/swap"
  # FileUtils.mkdir_p "~/.vim/backup"
# end

# initialize git submodules
puts "Initialize git submodules ..."
`git submodule init`
`git submodule update`

if ARGV.include? 'update'
  puts "Update (pull) git submodules ..."
  `git submodule foreach git pull origin master`
end

puts "All done!"
