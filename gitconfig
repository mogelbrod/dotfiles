[user]
  name = Victor Hallberg
  email = victor@hallberg.cc

[core]
  excludesfile = ~/.gitignore
  autocrlf = input
  pager = diff-so-fancy | less --tabs=4 -RFX

[push]
  default = current

[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto

[apply]
  whitespace = fix

[diff]
  renames = copies # Detect copies as well as renames.

[merge]
  tool = diffconflicts

[mergetool "diffconflicts"]
  cmd = ~/.vim/diffconflicts vim $BASE $LOCAL $REMOTE $MERGED
  trustExitCode = true
  keepBackup = false

[alias]
	main = !git switch $(basename $(git symbolic-ref --short refs/remotes/origin/HEAD))
  amend = commit --amend
  branches = branch -a
  cleanup = !git pull --prune --all --ff-only && git cleanup-branches && git remote prune origin
  cleanup-branches = !git branch --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" { print $1 }' | xargs -r git branch -D
  cp = cherry-pick
  discard = checkout --
  precommit = diff --cached --diff-algorithm=minimal -w
  rc = rebase --continue
  refs-by-age = for-each-ref --sort=-committerdate refs/remotes --format='%(HEAD) %(color:red)%(refname:short)%(color:reset) (%(color:blue)%(committerdate:relative)%(color:reset)) - %(contents:subject) - %(authorname)'
  stash-staged = "!bash -c \"git stash --keep-index; git stash push -m 'staged' --keep-index; git stash pop stash@{1}\""
  stashes = stash list
  sync = !git main && git cleanup
  tags = tag
  uncommit = reset --mixed HEAD~
  unstage = reset -q HEAD --

[pull]
  rebase = true

[diff-so-fancy]
  markEmptyLines = false

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
