snippet get "Get Elements"
getElement${1/(T)|.*/(?1:s)/}By${1:T}${1/(T)|(I)|.*/(?1:agName)(?2:d)/}('$2')
endsnippet

snippet :f "Object Method"
${1:method_name}: function(${3:attribute}) {
	${VISUAL}$0
}${10:,}
endsnippet

snippet :v "Object Value JS"
${1:value_name}: ${0:value},
endsnippet

snippet : "Object key key: 'value'"
${1:key}: ${2:"${3:value}"}${4:, }
endsnippet

snippet proto "Prototype (proto)"
${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
	${VISUAL}$0
};

endsnippet

snippet for "for (...) {...}"
for (var ${2:i}=0; $2 < ${1:things}.length; $2++) {
	${3:$1[$2]}${VISUAL}$0
};
endsnippet

snippet forr "for (...) {...} (faster)"
for (var ${2:i} = ${1:things}.length - 1; $2 >= 0; $2--) {
	${3:$1[$2]}${VISUAL}$0
};
endsnippet

snippet fn "Function (named)"
function ${1:function_name}(${2}) {
	${VISUAL}$0
}
endsnippet

snippet f "Function (inline)"
function (${1}) {
	${VISUAL}$0
}
endsnippet

snippet iif "Immediately-Invoked Function Expression (iife)"
(function (${1}) {
	${VISUAL}$0
}(${2:$1}));
endsnippet

snippet ife "if ___ else"
if (${1:condition}) {
  ${2://code}
} else {
  ${3://code}
}
endsnippet

snippet if "if"
if (${1:condition}) {
  ${VISUAL}$0
}
endsnippet

snippet timeout "setTimeout function"
setTimeout(function() {
  ${VISUAL}$0
}${2:.bind(${3:this})}, ${1:10});
endsnippet

snippet cl "console.log"
console.log(${1:"${2:value}"});$0
endsnippet

snippet cw "console.warn"
console.warn(${1:"${2:value}"});$0
endsnippet

snippet ce "console.error"
console.error(${1:"${2:value}"});$0
endsnippet

snippet ca "console.assert"
console.assert(${1:assertion}, ${2:"${3:message}"});$0
endsnippet

snippet cgroup "console.group"
console.group("${1:label}");
${VISUAL}$0
console.groupEnd();
endsnippet

snippet ctime "console.time"
console.time("${1:label}");
${VISUAL}$0
console.timeEnd("$1");
endsnippet

snippet ctimestamp "console.timestamp"
console.timeStamp("${1:label}")
endsnippet

snippet ctrace "console.trace"
console.trace();
endsnippet

snippet 3 "$(...)"
$(${1:'#sel'})${0}
endsnippet

snippet $r "jQuery DOM ready function"
$(function() {
	${1}
});
endsnippet

snippet sto setTimeout
setTimeout(function() {${2}}, ${1:10});${3}
endsnippet

snippet sint setInterval
setInterval(function() {${2}}, ${1:100});${3}
endsnippet

snippet byid
getElementById('${1}')${2}
endsnippet

snippet bytag
getElementsByTagName('${1}')${2}
endsnippet

snippet /* doc block
/**
	* ${1}
	*/${2}
endsnippet

snippet req require
require('${1:lib}');${2}
endsnippet

snippet vreq assigned require
var ${1:lib} = require('${2:$1}');${3}
endsnippet

# vim:ft=snippets:
